
version: "3.9"

services:
  postgres:
    image: postgres:15
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "max_replication_slots=10"
    environment:
      POSTGRES_USER: centrauser
      POSTGRES_PASSWORD: centrapass
      POSTGRES_DB: centrahealth
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "centrauser"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./centrahealth-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: centrahealth
      DB_USER: centrauser
      DB_PASS: centrapass
    ports:
      - "5000:5000"

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"

  connect:
    image: debezium/connect:2.5
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: /kafka/connect,/debezium-connector-postgres

  airflow-webserver:
    image: centrahealth-airflow
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://centrauser:centrapass@postgres:5432/centrahealth
      AIRFLOW__CORE__FERNET_KEY: Z7t1r2Y_YZcD4e6JsdS4J95au2GQ1FZJHMQA8YslgYk=
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags

  airflow-scheduler:
    image: centrahealth-airflow
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    command: scheduler
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://centrauser:centrapass@postgres:5432/centrahealth
      AIRFLOW__CORE__FERNET_KEY: Z7t1r2Y_YZcD4e6JsdS4J95au2GQ1FZJHMQA8YslgYk=
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags

volumes:
  pgdata:
